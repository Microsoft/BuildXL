<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"
      throwConfigExceptions="true"
      internalLogLevel="Info"
      internalLogFile="D:/data/logs/CloudCache.Internal.log"
      internalLogToConsole="false"
      internalLogToConsoleError="false"
      internalLogToTrace="false"
      internalLogIncludeTimestamp="true"
      parseMessageTemplates="false">
    <!--
        This NLog config is written out to fail horribly as soon as possible. It also disables structured logging in
        order to get some performance improvement, as we do not use the feature in CASaaS. 
        See: https://github.com/NLog/NLog/wiki/How-to-use-structured-logging#disabling-structured-logging
    -->

    <targets>
        <!-- 
            Targets are places we can write logs to. See here for alternatives: https://nlog-project.org/config/?tab=targets .

            Layout is the format in which we will write data unto the file. We are using the plain text layout with
            a couple of renderers (things we can write out). See here for renderers: https://nlog-project.org/config/?tab=layout-renderers .

            The options below have been set by looking at: https://github.com/NLog/NLog/wiki/performance .

            The AsyncWrapper is needed for performance in the multithreaded case. See here for documentation: 
            https://github.com/NLog/NLog/wiki/AsyncWrapper-target .
        -->
        <target name="LogFile"
            xsi:type="AsyncWrapper"
            queueLimit="10000"
            timeToSleepBetweenBatches="1"
            batchSize="200"
            overflowAction="Grow">
            <target name="InnerLogFile"
                xsi:type="File"
                layout="${longdate} [${threadid}] ${level:uppercase=true} ${message}"
                archiveAboveSize="100000000"
                maxArchiveFiles="20"
                archiveFileName="D:/data/logs/CloudCache.{#}.log"
                archiveNumbering="Sequence"
                archiveOldFileOnStartup="true"
                fileName="D:/data/logs/CloudCache.log"
                createDirs="true"
                keepFileOpen="true"
                concurrentWrites="false"
                openFileCacheTimeout="500"
                autoFlush="false"
                openFileFlushTimeout="10" />
        </target>

        <target name="CloudCacheLogEvent"
            xsi:type="AzureBlobStorageLogTarget">

            <!-- 
                Kusto ingestion should be configured to expect a CSV format compliant with RFC 4180. Here we ensure 
                that the logging layout is what we expect.
                See: https://kusto.azurewebsites.net/docs/management/data-ingestion/index.html#supported-data-formats

                This here is essentially the mapping between the logs and the CloudCacheLogEvent. We only add quotes
                in the cases where we could potentially have a comma inside of the field itself. For example, we will
                never add quotes on the timestamp because they're never supposed to have a comma. If anything breaks 
                this assumption, an ingestion error may ensue.

                WARNING: ORDER MATTERS HERE. Kusto doesn't really care about column names (in fact, our files do not
                have them), it only cares about the ordering especified in the ingestion mapping.
            -->
            <layout xsi:type="CsvLayout" quoting="Nothing" withHeader="false" delimiter="Comma">
                <column name="PreciseTimeStamp" layout="${longdate:universalTime=true}" quoting="Nothing" />
                <column name="LocalPreciseTimeStamp" layout="${longdate:universalTime=false}" quoting="Nothing" />
                <!-- TODO(jubayard): left empty until we can do proper structured logging. -->
                <column name="CorrelationId" layout="${event-properties:item=CorrelationId}" quoting="Nothing" />
                <column name="Role" layout="${event-properties:item=Role}" quoting="Nothing" />
                <column name="Component" layout="${event-properties:item=OperationComponent}" quoting="Nothing" />
                <column name="Operation" layout="${event-properties:item=OperationName}" quoting="Nothing" />
                <column name="Arguments" layout="${event-properties:item=OperationArguments}" quoting="All" />
                <column name="Duration" layout="${event-properties:item=OperationDuration}" quoting="Nothing" />
                <column name="Result" layout="${event-properties:item=OperationResult}" quoting="All" />
                <column name="BuildId" layout="${BuildId}" quoting="Nothing" />
                <!-- See: https://github.com/NLog/NLog/wiki/Message-Layout-Renderer -->
                <column name="Message" layout="${message}" quoting="All" />
                <column name="Exception" layout="${exception}" quoting="All" />
                <!-- See: https://github.com/NLog/NLog/wiki/ProcessId-Layout-Renderer -->
                <column name="ProcessId" layout="${processid}" quoting="Nothing" />
                <!-- See: https://github.com/NLog/NLog/wiki/ThreadId-Layout-Renderer -->
                <column name="ThreadId" layout="${threadid}" quoting="Nothing" />
                <column name="Machine" layout="${MachineName}" quoting="Nothing" />
                <column name="Stamp" layout="${Stamp}" quoting="Nothing" />
                <column name="Ring" layout="${Ring}" quoting="Nothing" />
                <column name="ConfigurationId" layout="${ConfigurationId}" quoting="Nothing" />
                <column name="Service" layout="${ServiceName}" quoting="Nothing" />
                <column name="ServiceVersion" layout="${ServiceVersion}" quoting="Nothing" />
                <column name="CacheVersion" layout="${CacheVersion}" quoting="Nothing" />
                <column name="ProcessStartTimeUtc" layout="${ProcessStartTimeUtc}" quoting="Nothing" />
                <!-- See: https://github.com/NLog/NLog/wiki/Level-Layout-Renderer -->
                <column name="LogLevel" layout="${level:format=Ordinal}" quoting="Nothing" />
                <column name="MachineFunction" layout="${APMachineFunction}" quoting="Nothing" />
                <column name="Environment" layout="${APCluster}" quoting="Nothing" />
            </layout>
        </target>
    </targets>

    <rules>
        <!-- 
            Rules map loggers to targets and log levels. They allow redirecting outputs to specific places. 
            See: https://github.com/nlog/NLog/wiki/Configuration-file#rules

            We always use a single logger, called Cache, so there's not much point to using this. This is implemented 
            this way because we don't really have the concept of different loggers in the cache.

            Filtering lets us apply rules that whitelist or blacklist certain log messages. This can potentially be
            used to reduce logging by simply changing configuration.
            See: https://github.com/NLog/NLog/wiki/Filtering-log-messages
        -->
        <!-- Trace corresponds to our Diagnostic level -->
        <logger name="*" minlevel="Trace" writeTo="LogFile" />

        <logger name="*" minlevel="Trace" writeTo="CloudCacheLogEvent" />
    </rules>
</nlog>