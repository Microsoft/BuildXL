// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

// WARN(jubayard): all fields in this file must be kept up to date with the cache's logging configuration and our 
// custom NLog renderers.

// Creates the table for log reporting into Kusto
.create table CloudCacheLogEvent (
    PreciseTimeStamp: datetime,
    LocalPreciseTimeStamp: datetime,
    CorrelationId: string,
    Role: string,
    Component: string,
    Operation: string,
    Arguments: string,
    Duration: timespan,
    Result: string,
    // Obtained via ITelemetryFieldsProvider
    BuildId: string,
    Message: string,
    Exception: string,
    ProcessId: long,
    ThreadId: long,
    // Obtained via ITelemetryFieldsProvider
    Machine: string,
    // Obtained via ITelemetryFieldsProvider
    Stamp: string,
    // Obtained via ITelemetryFieldsProvider
    Ring: string,
    // Obtained via ITelemetryFieldsProvider
    ConfigurationId: string,
    // Obtained via ITelemetryFieldsProvider
    ServiceName: string,
    // Obtained via ITelemetryFieldsProvider
    ServiceVersion: string,
    // Obtained via BuildXL.Utilities.Branding.Version
    CacheVersion: string,
    // Determined at the log startup time (i.e. not necessarily the actual cache process)
    ProcessStartTimeUtc: datetime,
    // This log level corresponds to NLog's log level. See NLogAdapter.Translate
    LogLevel: int)

.rename column CloudCacheLogEvent.ServiceName to Service

.alter-merge table CloudCacheLogEvent (
    // Obtained via ITelemetryFieldsProvider
    MachineFunction: string,
    // Obtained via ITelemetryFieldsProvider
    Environment: string
)

// Create ingestion mapping.
.create-or-alter table CloudCacheLogEvent ingestion csv mapping "Ingestion"  
'['
'    { "column": "PreciseTimeStamp", "Properties": { "Ordinal": "0" } },'
'    { "column": "LocalPreciseTimeStamp", "Properties": { "Ordinal": "1" } },'
'    { "column": "CorrelationId", "Properties": { "Ordinal": "2" } },'
'    { "column": "Role", "Properties": { "Ordinal": "3" } },'
'    { "column": "Component", "Properties": { "Ordinal": "4" } },'
'    { "column": "Operation", "Properties": { "Ordinal": "5" } },'
'    { "column": "Arguments", "Properties": { "Ordinal": "6" } },'
'    { "column": "Duration", "Properties": { "Ordinal": "7" } },'
'    { "column": "Result", "Properties": { "Ordinal": "8" } },'
'    { "column": "BuildId", "Properties": { "Ordinal": "9" } },'
'    { "column": "Message", "Properties": { "Ordinal": "10" } },'
'    { "column": "Exception", "Properties": { "Ordinal": "11" } },'
'    { "column": "ProcessId", "Properties": { "Ordinal": "12" } },'
'    { "column": "ThreadId", "Properties": { "Ordinal": "13" } },'
'    { "column": "Machine", "Properties": { "Ordinal": "14" } },'
'    { "column": "Stamp", "Properties": { "Ordinal": "15" } },'
'    { "column": "Ring", "Properties": { "Ordinal": "16" } },'
'    { "column": "ConfigurationId", "Properties": { "Ordinal": "17" } },'
'    { "column": "Service", "Properties": { "Ordinal": "18" } },'
'    { "column": "ServiceVersion", "Properties": { "Ordinal": "19" } },'
'    { "column": "CacheVersion", "Properties": { "Ordinal": "20" } },'
'    { "column": "ProcessStartTimeUtc", "Properties": { "Ordinal": "21" } },'
'    { "column": "LogLevel", "Properties": { "Ordinal": "22" } },'
'    { "column": "MachineFunction", "Properties": { "Ordinal": "23" } },'
'    { "column": "Environment", "Properties": { "Ordinal": "24" } },'
']';
